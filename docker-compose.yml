version: '3.8'

services:
  neo4j:
    image: neo4j:5.13-community
    container_name: financial_neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"   # HTTP
      - "7687:7687"   # Bolt
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
      - ./neo4j/conf:/conf
    environment:
      - NEO4J_AUTH=neo4j/financialpass
      - NEO4J_PLUGINS=["apoc"]
      - NEO4J_dbms_security_procedures_unrestricted=apoc.*
      - NEO4J_dbms_security_procedures_allowlist=apoc.*
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
      - NEO4J_dbms_memory_heap_initial__size=1G
      - NEO4J_dbms_memory_heap_max__size=2G
      - NEO4J_dbms_memory_pagecache_size=1G
    healthcheck:
      test: ["CMD", "cypher-shell", "--username", "neo4j", "--password", "financialpass", "RETURN 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Optional: Financial advisor app with Neo4j dependency
  financial-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: financial_app
    restart: unless-stopped
    ports:
      - "8501:8501"   # Streamlit
      - "8502:8502"   # MCP server (if needed)
    volumes:
      - .:/app
      - ./data:/app/data
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=financialpass
      - GOOGLE_AI_API_KEY=${GOOGLE_AI_API_KEY}
    depends_on:
      neo4j:
        condition: service_healthy
    command: ["streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]

volumes:
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local

networks:
  default:
    name: financial_network